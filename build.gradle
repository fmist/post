plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.node-gradle.node" version "3.5.0"
	id 'com.palantir.docker' version "0.22.1"
	id 'com.palantir.docker-run' version '0.22.1'
	id "com.avast.gradle.docker-compose" version "0.16.11"
}

group = 'com.fmist'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
}

//node {
//	download = true
//
//	// Set the work directory for unpacking node
//	workDir = file("${project.buildDir}/nodejs")
//
//	// Set the work directory for NPM
//	npmWorkDir = file("${project.buildDir}/npm")
//}
//
//task appNpmInstall(type: NpmTask) {
//	description = "Installs all dependencies from package.json"
//	workingDir = file("${project.projectDir}/src/main/webapp")
//	args = ["install"]
//}
//
//task appNpmBuild(type: NpmTask) {
//	description = "Builds production version of the webapp"
//	workingDir = file("${project.projectDir}/src/main/webapp")
//	args = ["run", "build"]
//}
//
//task copyWebApp(type: Copy) {
//	from 'src/main/webapp/build'
//	into 'build/resources/main/static/.'
//}
//
//appNpmBuild.dependsOn appNpmInstall
//copyWebApp.dependsOn appNpmBuild
//compileJava.dependsOn copyWebApp


String imageName = "${project.name}:${project.version}"

def properties = new Properties()
file("src/main/resources/application.properties").withInputStream {
	stream -> properties.load(stream)
}

docker {
	dependsOn build
	dockerfile file('Dockerfile')
	name imageName
	files bootJar.outputs
	buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}

dockerRun {
	name "${project.name}-container"
	image imageName
	ports "8887:${properties.get("server.port")}"
	daemonize true
	clean true
}

dockerRunStatus {
}

dockerStop {
}

dockerRemoveContainer {
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.avast.gradle:gradle-docker-compose-plugin:0.16.11'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
